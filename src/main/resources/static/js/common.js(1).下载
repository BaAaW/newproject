function addScript(){
    var head = document.getElementsByTagName('head')[0];
    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.src = '//one.cpic.com.cn/pc/views/member/login/oauth2CheckLogin/oauth2CheckLogin.js';
    head.appendChild(script);
}
addScript();

$.fn.jqLoading = function(option,tagName) {
	if(!tagName){
		tagName = "layerTag";
	}
	var defaultVal = {
		backgroudColor: "#ECECEC", //背景色
		text: "蓝鲸全力为您加载中...", //文字 
		width: 286, //宽度
		height: 161, //高度
		position: "absolute",
		left: 554.5,
		top: 469.5,
		type: 0 //0全部遮，1局部遮

	};
	var opt = $.extend({}, defaultVal, option);

	if (opt.type == 0) {
		//全屏遮
		openLayer();
	} else {
		//局部遮(当前对象应为需要被遮挡的对象)
		openPartialLayer(this);
	}

	//销毁对象
	if (option === "destroy") {
		closeLayer();
	}

	//全部遮罩
	function openLayer() {
		//背景遮罩层
		var layer = $("<div class='layer'></div>");
		layer.css({
			width: width() + "px",
			height: height() + "px"
		});

		//图片及文字层
		var content = $("<div class='layer-content'></div>");
		content.css({
			width: opt.width + "px",
			height: opt.height + "px",
			padding: opt.height / 5 + "px",
			background: opt.backgroudColor,
			position: opt.position,
			left: opt.left+"px",
			top: opt.top+"px"

		});

		content.append("<img style='margin:" + (opt.height /6) + "px;' src='//service.cpic.com.cn/res/img/common/loading-blue.gif' /><p>" + opt.text + "</p>");
		$("body").append(layer).append(content);
//		var top = content.css("top").replace('px', '');
//		var left = content.css("left").replace('px', '');
//		content.css("top", (parseFloat(top) - opt.height / 2)).css("left", (parseFloat(left) - opt.width / 2));
		objPosition(content);
		return this;
	}

	//局部遮罩
	function openPartialLayer(obj) {
		var ewidth = obj.width();
		var eheight = obj.height();
		//var eheight = $(obj).css("height"); //元素带px的高宽度
		//var ewidth = $(obj).css("width");
		var top = $(obj).offset().top; // 元素在文档中位置 滚动条不影响
		var left = $(obj).offset().left;

		var layer = $("<div class='layer-partial "+tagName+"'></div>");
		layer.css({
			width: ewidth + 'px',
			height: eheight + 'px',
			left: left,
			top: top
		});

		layer.append("<img style='position:absolute;left:" + ((ewidth - 32) / 2) + "px; top:" + ((eheight - 32) / 2) + "px;' src='//service.cpic.com.cn/res/img/common/loading.gif' />");
		$("body").append(layer);
		return this;
	}
	//销毁对象

	function closeLayer() {
		$(".layer,.layer-content, ."+tagName+"").remove();
		return this;
	}
};

function select(obj, sub, data, value) {
    this.VselectShow(obj, sub, data, value);
}
select.prototype.VselectShow = function(obj, sub, data, value) {
    var obj = $(obj);
    var sub = $(sub);
    var data = $(data);
    var value = $(value);
    obj.click(function() {
        $(sub).stop().slideToggle(400);//ʹ�û���Ч��߶ȱ仯�����л�Ԫ�صĿɼ�״̬��(stop() ����ֹͣ��ǰ�������еĶ�����)
        return false;
    });
    obj.parents().siblings().click(function() {
        $(sub).stop().slideUp(400);//ǰ���ͬ��Ԫ�ص��ʱ�򣬻�����$(sub)Ԫ��
    });
    sub.children().click(function() {
        data.text($(this).text());//����span��ǩ����
        value.val($(this).attr("typet"));//�������ص�input���ֵ����attr("data")����ȡ���Զ�Ӧ��ֵ��
        //value.attr("code",$(this).attr("code"));
        $(sub).slideUp(400);
        //console.log($(this).attr("typet"));
        //console.log(value.val());
    })
};

/**
 * 将Date转成2015-01-10
 * @param date
 * @returns {String}
 */
Date.prototype.Format = function (fmt) { //author: meizz
    var o = {
        "M+": this.getMonth() + 1, //月份
        "d+": this.getDate(), //日
        "h+": this.getHours(), //小时
        "m+": this.getMinutes(), //分
        "s+": this.getSeconds(), //秒
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度
        "S": this.getMilliseconds() //毫秒
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
}

//设置背景层高
function height() {
	var scrollHeight, offsetHeight;
	// handle IE 6
	if ($.support.boxModel && $.support.leadingWhitespace) {
		scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
		offsetHeight = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight);
		if (scrollHeight < offsetHeight) {
			return $(window).height();
		} else {
			return scrollHeight;
		}
		// handle "good" browsers
	} else if ($.support.objectAll) {
		return $(document).height() - 4;
	} else {
		//return $(document).height() + 500;
		return $(document).height();
	}
};

//设置背景层宽
function width() {
	var scrollWidth, offsetWidth;
	// handle IE
	if ($.support.boxModel) {
		scrollWidth = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);
		offsetWidth = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);
		if (scrollWidth < offsetWidth) {
			return $(window).width();
		} else {
			return scrollWidth;
		}
		// handle "good" browsers
	} else {
		return $(document).width();
	}
};

var listMenu = function() {
	var count = 1;
	var index = 0;
	$('.submenu' + count).find('.submenu_title').addClass('current').children('input').val(-1);
	$('.submenu' + count).find('.submenu_cont').addClass('current');
	$('.submenu' + count).find('.submenu_cont').children().eq(index).addClass('current');

	$(".submenu_title").hover(function() {
		$(this).addClass('current');
	}, function() {
		var i = $(this).children('input').val();
		if (i == 1) {
			$(this).removeClass('current');
		}
	})
	$(".submenu_title").click(function() {
		var i = $(this).children('input').val();
		i = -i;
		$(".submenu_title").removeClass('current').children('input').val(1);
		$(this).addClass('current').children('input').val(i);
		$('.submenu_cont:visible').slideUp();
		$(this).next(".submenu_cont").stop().slideToggle();
	});
	$('.submenu_cont li').hover(function() {
		$(this).css('color', '#06569D');
	}, function() {
		if (!$(this).hasClass('current')) {
			$(this).css('color', '#575757');
		}
	});
	$('.submenu_cont li').click(function() {
		$('.submenu_cont li').removeClass('current').css('color', '#575757');
		$(this).addClass('current').css('color', '#06569D');
	})
};

//下拉框 传参：值，选项
function selectShow(obj, sub, data, value) {
	var obj = $(obj);
	var sub = $(sub);
	var data = $(data);
	var value = $(value);
	obj.click(function() {
		$(sub).stop().slideToggle();
	});
	obj.parents().siblings().click(function() {
		$(sub).stop().slideUp();
	});
	sub.children().click(function() {
		data.text($(this).text());
		value.val($(this).attr("data"));
		$(sub).slideUp();
	})
}

//倒计时 传参：标签名，时间
function sendTime(tagName, setTime, bundFun) {
	var obj = $(tagName);
	var t = setTime;
	var str = '秒后重新获取';
	var time;
	deadline();

	function deadline() {
		obj.unbind("click");
		obj.text(t + str).addClass("dx-font-setTime");
		time = setTimeout(autoplay, 1000);
	}

	function autoplay() {
		t--;
		obj.text('发送验证码').removeClass("dx-font-setTime");
		if (t < 0) {
			clearTimeout(time);
			t = setTime;
			if(bundFun == "undefined"){
				obj.on('click', deadline);
			}else{
				obj.on('click', bundFun);
			}
		} else {
			obj.text(t + str).addClass("dx-font-setTime");
			time = setTimeout(autoplay, 1000);
		}
	}
}

function showInfoScroll(openDiv,closeDiv,flag) {
    //背景遮罩层
    var contentBg = $("<div class='openContent showInfo'></div>");
    var contentDiv = $(openDiv);
    $("body").append(contentBg).append(contentDiv);

    overPosition(contentBg);
    objPosition(contentDiv);

    function closeInfo() {
        $(contentBg).remove();
        // $(dom).hide();
        contentDiv.css({
            visibility: 'hidden',
            top: '0',
            left: '0'
        });
        return this;
    }

    $(closeDiv).click(function () {
        closeInfo();
    });
    if (flag == "true") {
        $('.openContent').click(function () {
            closeInfo();
        });
    }
    // fn && fn();
    return this;
}

//弹出框
//openDiv:需要打开的层，closeDiv:关闭按钮
function showInfo(openDiv,closeDiv,dom,fn) {
    //背景遮罩层
    var contentBg = $("<div class='openContent showInfo'></div>");
    contentBg.css({
        width: width() + "px",
        height: height() + "px"
    });

    //弹出内容
    var contentDiv = $(openDiv);
    contentDiv.css({
        visibility: 'visible'
    });
    $("body").append(contentBg).append(contentDiv);
//	var contentTop = contentDiv.css("top").replace('px','');
//	var contentLeft = contentDiv.css("left").replace('px','');
//	contentDiv.css("top", parseFloat(contentTop) - contentDiv.height()/2).css("left", parseFloat(contentLeft) - contentDiv.width()/2);
    objPosition(contentDiv);

    function closeInfo() {
        $(contentBg).remove();
        $(dom).hide();
        contentDiv.css({
            visibility: 'hidden',
            top: '0',
            left: '0'
        });
        return this;
    }
    $(closeDiv).click(function () {
        closeInfo();
    });
	fn && fn();
	return this;
}

function closeShowInfo(div){
   //关闭弹出框
   $(".showInfo").remove();
   $(div).css({
		visibility: 'hidden',
		top: '0',
		left: '0'
	});
}

/*
 * 调用closeFun时，如果需要移除dialog， 需移除背景层 showInfoDialog
 */
function dialog(message,btnFun,closeFun) {
    if("Service Unavailable"==message) message = "系统繁忙，请重新请求";
    var msgBg = $("<div class='openContent showInfoDialog'></div>");
	msgBg.css({
		width: width() + "px",
		height: height() + "px"
	});
	var msgContent = "<div class=\"open_block showInfo-content alertMsg\"><h4 class=\"open_tit\"><a class=\"open_close closeMsg\"></a>太平洋保险温馨提示</h4><p class=\"msgTxt\">"+message+"</p><div class=\"txt-c\"><input type=\"button\" class=\"btn_blue btn_blue_b btnMsg\" value=\"确定\"></div><div class=\"height2\"></div></div>";
	$("body").append(msgBg).append(msgContent);
	objPosition($(".alertMsg"));
	$(".showInfoDialog").show();
	function closeInfo() {
		$(".showInfoDialog").remove();
		$(".alertMsg").css({
			visibility: 'hidden',
			top: '0',
			left: '0'
		});
		$(".alertMsg").remove();
		return this;
	}
	
	if( closeFun !=undefined && closeFun !=null && closeFun != "" && closeFun!='undefined' && closeFun instanceof Function){
		$(".closeMsg").click(closeFun);
	}else{
		$(".closeMsg").click(function(){
			closeInfo();
		});
	}
	
	if( btnFun !=undefined && btnFun !=null && btnFun != "" && btnFun!='undefined' && btnFun instanceof Function){
		$(".btnMsg").click(btnFun);	
	}else{
		$(".btnMsg").click(function(){
			closeInfo();
		});
	}
	
	return this;
}

/*
 * 内容的显示隐藏效果
 * tag:点击展现切换效果的标签
 * content:切换的内容
 * toggleTag:切换样式的标签
 * toggleClass:切换样式的效果
 */
function showContent(tag,content,toggleTag,toggleClass) {
	//在IE8下初始无法获得高度，故声明该变量
	var contentHeight;
	$(tag).click(function(){
		contentHeight = $(this).next(content).height();
		//$(this).next(content).css('min-height',contentHeight);
		$(this).find(toggleTag).toggleClass(toggleClass);
		$(this).next(content).stop().slideToggle();
	});
}

/**
 * 字符处理:null值处理成"--"
 * @param strParam
 * @returns
 */
function dealStringPro(strParam){
	//去两边空格的正则，得到正确的值再进行校验
	var dataValue = $.trim(strParam);
	if(dataValue == null || dataValue == "null" || dataValue == "" || dataValue == "undefind"){
		return "--";
	}
	return dataValue;
}

/**
 * 字符处理:null值处理成""
 * @param param
 * @returns
 */
function dealNullStr(strParam) {
	//去两边空格的正则，得到正确的值再进行校验
	var dataValue = $.trim(strParam);
	if(dataValue == null || dataValue == "null" || dataValue == "" || dataValue == "undefined"){
		return "";
	}
	return dataValue;
}

/**
 * json对象，null值处理成"--"
 * @param jsonData
 * @returns
 */
function replaceNullValue(jsonData){
	var jsonStr=JSON.stringify(jsonData).replace(/null/gi,'"--"');
	return $.parseJSON(jsonStr);
}

//弹出层位置计算
function objPosition(obj) {
	//obj这个参数是弹出框的整个对象  
	var screenWidth = $(window).width(),
		screenHeigth = $(window).height();
	//获取屏幕宽高  
	var scollTop = $(document).scrollTop();
	//当前窗口距离页面顶部的距离  
	var objLeft = (screenWidth - obj.width()) / 2;
	///弹出框距离左侧距离  
	var objTop = (screenHeigth - obj.height()) / 2 + scollTop;
	///弹出框距离顶部的距离  
	obj.css({
		left: objLeft + "px",
		top: objTop + "px",
		visibility: 'visible'
	});
	obj.fadeIn(500);
	//弹出框淡入  
	//弹出框打开后这个变量置1 说明弹出框是打开装填  
	//当窗口大小发生改变时  
	$(window).resize(function() {
		//只有isOpen状态下才执行  
		var visible = obj.css("visibility");
		if (visible == "visible") {
			//重新获取数据  
			screenWidth = $(window).width();
			screenHeigth = $(window).height();
			var scollTop = $(document).scrollTop();
			objLeft = (screenWidth - obj.width()) / 2;
			var objTop = (screenHeigth - obj.height()) / 2 + scollTop;
			obj.css({
				left: objLeft + "px",
				top: objTop + "px"
			});
			obj.fadeIn(500);
		}
	});
	//当滚动条发生改变的时候  
	$(window).scroll(function() {
		var visible = obj.css("visibility");
		if (visible == "visible") {
			//重新获取数据  
			screenWidth = $(window).width();
			screenHeigth = $(window).height();
			var scollTop = $(document).scrollTop();
			objLeft = (screenWidth - obj.width()) / 2;
			var objTop = (screenHeigth - obj.height()) / 2 + scollTop;
			obj.css({
				left: objLeft + "px",
				top: objTop + "px"
			});
			obj.fadeIn(500);
		}
	});

}

//遮罩层位置计算
function overPosition(obj) {
    //obj这个参数是弹出框的整个对象
    var screenWidth = $(window).width(),
        screenHeigth = $(window).height();
    //获取屏幕宽高
    var scollTop = $(document).scrollTop();
    ///弹出框距离顶部的距离
    obj.css({
        left: "0px",
        top: scollTop + "px",
        width: screenWidth + "px",
        height: screenHeigth + "px",
        visibility: 'visible'
    });
    //弹出框淡入
    // obj.fadeIn(500);
    //弹出框打开后这个变量置1 说明弹出框是打开装填

    //当窗口大小发生改变时
    $(window).resize(function () {
        //只有isOpen状态下才执行
        var scollTop = $(document).scrollTop();
        var visible = obj.css("visibility");
        if (visible == "visible") {
            //重新获取数据
            screenWidth = $(window).width();
            screenHeigth = $(window).height();
            obj.css({
                top: scollTop + "px",
                width: screenWidth + "px",
                height: screenHeigth + "px"
            });
            // obj.fadeIn(500);
        }
    });
    //当滚动条发生改变的时候
    $(window).scroll(function () {
        var visible = obj.css("visibility");
        if (visible == "visible") {
            //重新获取数据
            var scollTop = $(document).scrollTop();
            obj.css({
                top: scollTop + "px"
            });
            // obj.fadeIn(500);
        }
    });
}

/**
 * 设置菜单
 * @param a
 * @param b
 */
function setMenuSeleted(a,b){
	$('.outbox .current').removeClass('current');
	$('.outbox .submenu'+a+' .submenu_title').addClass('current');
	$('.outbox .submenu'+a+' ul').show();
	$('.outbox .submenu'+a+' ul li').eq(b).addClass('current');
};

function checkAll(obj, boxName) {
	var checkboxs = $("input[name="+boxName+"]");
	for (var i = 0; i < checkboxs.length; i += 1) {
		checkboxs[i].checked = obj.checked;
	}
}

/**
 * 判空
 * @param param
 * @returns
 */
function checkChartIsNotNull(param){
	if(param!=null && param!='' && param !=undefined){
		return true;
	}
	return false;
}

//获取当前时间，格式YYYY-MM-DD
function getNowFormatDate() {
    var date = new Date();
    var seperator1 = "-";
    var year = date.getFullYear();
    var month = date.getMonth() + 1;
    var strDate = date.getDate();
    if (month >= 1 && month <= 9) {
        month = "0" + month;
    }
    if (strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
    }
    var currentdate = year + seperator1 + month + seperator1 + strDate;
    return currentdate;
}

function insertOm(pageName,prop50){
   	// s.pageName = pageName;
   	// var strArray = pageName.split(":");
   	// s.channel = strArray[0];
   	// s.prop50=prop50;
   	//
   	// s.prop1 = strArray[0] +":"+ strArray[1];
   	//
   	// if(strArray.length == 3){
	// 	s.prop2 = pageName;
   	// }
   	//
   	// if(strArray.length == 4){
	// 	s.prop2 = strArray[0] + ":" +strArray[1] + ":" + strArray[2];
	// 	s.prop3 = pageName;
   	// }
   	//
   	// if(strArray.length == 5){
   	// 	s.prop2 = strArray[0] + ":" +strArray[1] + ":" + strArray[2];
	// 	s.prop3 = strArray[0] + ":" +strArray[1] + ":" + strArray[2] + ":" + strArray[3];
	// 	s.prop4 = pageName;
   	// }
   	//
   	// if(strArray.length == 6){
   	// 	s.prop2 = strArray[0] + ":" +strArray[1] + ":" + strArray[2];
	// 	s.prop3 = strArray[0] + ":" +strArray[1] + ":" + strArray[2] + ":" + strArray[3];
	// 	s.prop4 = strArray[0] + ":" +strArray[1] + ":" + strArray[2] + ":" + strArray[3] + ":" + strArray[4];
	// 	s.prop5 = pageName;
   	// }
   	//
	// var s_code = s.t();if(s_code)document.write(s_code);
}
	 
//在线服务数据监控方案（omniture）  
function insertLog(desc) {
    // if (bm_omniture != null) {
    //     bm_omniture.eventDesc(this, desc)
    // } else {
    //     var s = s_gi(s_account);
    //     s.linkTrackVars = 'prop21';
    //     s.prop21 = desc;
    //     s.tl(this, 'o', '控件监控');
    // }
}

//OM部署tab键、提交量、本页面的完成量和弹出框
function insertLogOm(name) {
    // if (bm_omniture != null) {
    //     bm_omniture.eventMsg(this, name, name)
    // } else {
    //     var s = s_gi(s_account);
    //     s.linkTrackVars = 'prop50';
    //     s.prop50 = name;
    //     s.tl(this, 'o', name);
    // }
}

function newcontOm(prop50,_pageName){
    // bm_omniture.eventMsg(this, _pageName, prop50);
}

function omEventMsg(prop51,prop50,_pageName) {
    // bm_omniture.eventMsg(this, _pageName, prop50, prop51);
}

/*
 * 环境判断
 * */
function environment(){
    var _environment=location.host;
    var member_url = "";
    switch(_environment) {
        case "service.cpic.com.cn" :
            member_url = "one.cpic.com.cn";
            break;
        case "localhost:8443" :
        case "localhost:8080" :
        case "service1sit.cpic.com.cn" ://sit:https
        case "service1sit.cpic.com.cn:8000" :
            member_url = "onesit.cpic.com.cn";//性能测试环境
            break;
    }
    return member_url;
}

function GetRequest() {
    var url = location.search; //获取url中"?"符后的字串
    var theRequest = new Object();
    if (url.indexOf("?") != -1) {
        var str = url.substr(1);
        strs = str.split("&");
        for(var i = 0; i < strs.length; i++) {
            theRequest[strs[i].split("=")[0]]=unescape(strs[i].split("=")[1]);
        }
    }
    return theRequest;
}

//过滤html特殊字符
var encodeHTML = function(param){
    return String(param).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;");
};
// 倒计时
var bl = true;
function smsTime(tagName, setTime,isText) {
    var obj = $(tagName);
    var t = setTime;
    var str = '秒后重新获取';
    var time;
    if (bl) {
        deadline();
    }
    function deadline() {
//		obj.off();
        bl = false;
        obj.text(t + str).addClass("dx-font-setTime");
        time = setTimeout(autoplay, 1000);
    }
    function autoplay() {
        t--;
        if(isText){
            obj.text('发送验证码').removeClass("dx-font-setTime");
        }else{
            obj.val('发送验证码').removeClass("dx-font-setTime");
        }
        if (t < 0) {
            clearTimeout(time);
            t = setTime;
            bl = true;
        } else {
            if(isText){
                obj.text(t + str).addClass("dx-font-setTime");
            }else{
                obj.val(t + str).addClass("dx-font-setTime");
            }
            time = setTimeout(autoplay, 1000);
        }
    }
}
//封装参数 form Post 提交
function goToUrl(url,params,isblank){
    var myForm = document.createElement("form");
    myForm.method="post";
    myForm.action=url;
    if(isblank){
        myForm.target = "_blank";
    }
    if(params !='undefined' && params!=null){
        var items = params.split("&");
        var item = null;
        for(var i=0;i<items.length;i++){
            item = items[i].split("=");
            var input = document.createElement("input");
            input.type = "hidden";
            input.name = item[0];
            if("_target" == item[0]){
                myForm.target = item[1];
            }
            input.value = encodeHTML(item[1]);
            myForm.appendChild(input);
        }
    }
    document.body.appendChild(myForm);

    myForm.submit();
    document.body.removeChild(myForm);
};

var checkCode = function(data, dataCode, errClass, codeType, selectType) {
    //去两边空格的正则，得到正确的值再进行校验
    // var dataValue = dataCode.replace(/(^\s*)|(\s*$)/g, "");
    var dataValue = dataCode;
    if (codeType == 0) {
        //selectType，获取选中的select值
        var type = $(selectType).val();
        //各类证件号正则校验
        if (type == "1") {
            //isIdCard:身份证
            //身份证正则，分为15位、18位
            var idNo = dataValue;
            if (idNo.length != 18 && idNo.length != 15) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false
            } else {
                //验证身份证号码
                var Y, JYM, reg;
                /*身份号码位数及格式检验*/
                switch (idNo.length) {
                    case 15:
                        if ((parseInt(idNo.substr(6, 2)) + 1900) % 4 == 0 || ((parseInt(idNo.substr(6, 2)) + 1900) % 100 == 0 && (parseInt(idNo.substr(6, 2)) + 1900) % 4 == 0)) {
                            reg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$/; //测试出生日期的合法性
                        } else {
                            reg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}$/; //测试出生日期的合法性
                        }
                        if (reg.test(idNo)) {
                            //15位验证通过
                            $(data).removeClass(errClass);
                            $(data).next().text("");
                            //校验成功时，返回证件号
                            return dataValue;
                        } else {
                            //校验失败时，给出错误提示
                            $(data).addClass(errClass);
                            $(data).next().text("请输入正确的证件号！");
                            return false;
                        }
                        break;
                    case 18:
                        //18位身份号码检测
                        //出生日期的合法性检查
                        //闰年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))
                        //平年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))
                        reg = /^[1-6][0-7]\d{4}((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)(0[1-9]|[12][0-9]|30))|(02(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))0229))\d{3}(\d|X|x)?$/;
                        if (reg.test(idNo)) { //测试出生日期的合法性
                            //计算校验位
                            var S = (parseInt(idNo.charAt(0)) + parseInt(idNo.charAt(10))) * 7 +
                                (parseInt(idNo.charAt(1)) + parseInt(idNo.charAt(11))) * 9 +
                                (parseInt(idNo.charAt(2)) + parseInt(idNo.charAt(12))) * 10 +
                                (parseInt(idNo.charAt(3)) + parseInt(idNo.charAt(13))) * 5 +
                                (parseInt(idNo.charAt(4)) + parseInt(idNo.charAt(14))) * 8 +
                                (parseInt(idNo.charAt(5)) + parseInt(idNo.charAt(15))) * 4 +
                                (parseInt(idNo.charAt(6)) + parseInt(idNo.charAt(16))) * 2 +
                                parseInt(idNo.charAt(7)) * 1 + parseInt(idNo.charAt(8)) * 6 +
                                parseInt(idNo.charAt(9)) * 3;
                            Y = S % 11;
                            var M = "F";
                            JYM = "10X98765432";
                            M = JYM.substr(Y, 1);
                            /*判断校验位*/
                            if (M == idNo.charAt(17).toUpperCase()) {
                                //15位验证通过
                                $(data).removeClass(errClass);
                                $(data).next().text("");
                                //校验成功时，返回证件号
                                return dataValue;
                                /*检测ID的校验位false;*/
                            } else {
                                //校验失败时，给出错误提示
                                $(data).addClass(errClass);
                                $(data).next().text("请输入正确的证件号！");
                                return false;
                            }
                        } else {
                            //校验失败时，给出错误提示
                            $(data).addClass(errClass);
                            $(data).next().text("请输入正确的证件号！");
                            return false;
                        }
                        break;
                    default:
                        //校验失败时，给出错误提示
                        $(data).addClass(errClass);
                        $(data).next().text("请输入正确的证件号！");
                        return false;

                }
            }
        } else if (type == "2") {
            //isPassport:护照
            //var reg = new RegExp(/^1([4|5])[0-9]{7}G[0-9]{8}|P[0-9]{7}|S{0-9}{7,8}|D[0-9]+$/);
            //if ( dataValue.length == 0 || !reg.test(dataValue)) {
            if (dataValue.length < 7 || dataValue.length >30) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            } else {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            }
        } else if (type == "3") {
            //isMilitary:军人证
            //var reg = new RegExp(/^([南|北|沈|兰|成|济|广|海|空|参|政|后|装])字第(\d{8})号$/);
            //if (dataValue.length == 0 || !reg.test(dataValue)) {
            if (dataValue.length < 4 || dataValue.length > 30) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            } else {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            }
        } else if (type == "4") {
            //isDriver:驾驶证
            //var regOne = new RegExp(/^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$/);
            //var regTwo = new RegExp(/^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[A-Z])$/);
            //if (dataValue.length == 0 || !regOne.test(dataValue) || !regTwo.test(dataValue)) {
            if (dataValue.length < 1 || dataValue.length >30) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            } else {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            }
        } else if (type == "5") {
            //isHKMacao:港澳居民通行证
            //var reg = new RegExp(/^([H|M|h|m]){1}([0-9]{10}|[0-9]{8})$/);
            //if (dataValue.length == 0 || !reg.test(dataValue)) {
            if (dataValue.length < 7 || dataValue.length >30) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            } else {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            }
        } else if (type == "6") {
            //isTaiwan:台湾居民通行证
            //var reg = new RegExp(/^[0-9]{8,10}$/);
            //if (dataValue.length == 0 || !reg.test(dataValue)) {
            if (dataValue.length < 7 || dataValue.length >30) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            } else {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            }
        } else if (type == "7") {
            //is组织机构代码
            //var reg = new RegExp(/^[0-9]{8,10}$/);
            //if (dataValue.length == 0 || !reg.test(dataValue)) {
            if (dataValue.length < 7 || dataValue.length >30) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            } else {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            }
        } else if (type == "21") {
            //外国人永久居留证
            if (dataValue.length == 15) {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            } else {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            }
        } else if (type == "22" || "23" == type) {
            var idNo = dataValue;
            //验证身份证号码
            var Y, JYM, reg;
            //港澳居民居住证
            if (dataValue.length == 18) {
                /*身份号码位数及格式检验*/
                //18位身份号码检测
                //出生日期的合法性检查
                //闰年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))
                //平年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))
                reg = /^8[1-3]0000((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)(0[1-9]|[12][0-9]|30))|(02(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))0229))\d{3}(\d|X|x)?$/;
                if (type == "22") {//港澳
                    reg = /^8[1-2]0000((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)(0[1-9]|[12][0-9]|30))|(02(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))0229))\d{3}(\d|X|x)?$/;
                } else if (type == "23") {//台湾
                    reg = /^830000((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)(0[1-9]|[12][0-9]|30))|(02(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))0229))\d{3}(\d|X|x)?$/;
                } else {//缺省 港澳台(已作废)
                    reg = /^8[1-3]0000((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)(0[1-9]|[12][0-9]|30))|(02(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))0229))\d{3}(\d|X|x)?$/;
                }
                if (reg.test(idNo)) { //测试出生日期的合法性
                    //计算校验位
                    var S = (parseInt(idNo.charAt(0)) + parseInt(idNo.charAt(10))) * 7 +
                        (parseInt(idNo.charAt(1)) + parseInt(idNo.charAt(11))) * 9 +
                        (parseInt(idNo.charAt(2)) + parseInt(idNo.charAt(12))) * 10 +
                        (parseInt(idNo.charAt(3)) + parseInt(idNo.charAt(13))) * 5 +
                        (parseInt(idNo.charAt(4)) + parseInt(idNo.charAt(14))) * 8 +
                        (parseInt(idNo.charAt(5)) + parseInt(idNo.charAt(15))) * 4 +
                        (parseInt(idNo.charAt(6)) + parseInt(idNo.charAt(16))) * 2 +
                        parseInt(idNo.charAt(7)) * 1 + parseInt(idNo.charAt(8)) * 6 +
                        parseInt(idNo.charAt(9)) * 3;
                    Y = S % 11;
                    var M = "F";
                    JYM = "10X98765432";
                    M = JYM.substr(Y, 1);
                    //判断校验位
                    if (M == idNo.charAt(17).toUpperCase()) {
                        //验证通过
                        $(data).removeClass(errClass);
                        $(data).next().text("");
                        //校验成功时，返回证件号
                        return dataValue;
                        /*检测ID的校验位false;*/
                    } else {
                        //校验失败时，给出错误提示
                        $(data).addClass(errClass);
                        $(data).next().text("请输入正确的证件号！");
                        return false;
                    }
                } else {
                    //校验失败时，给出错误提示
                    $(data).addClass(errClass);
                    $(data).next().text("请输入正确的证件号！");
                    return false;
                }
            } else {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            }
        } else if (type == "31") {
            //is组织机构代码
            //var reg = new RegExp(/^[0-9]{8,10}$/);
            //if (dataValue.length == 0 || !reg.test(dataValue)) {
            if (dataValue.length < 1 || dataValue.length >30) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            } else {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            }
        } else if (type == "32" || type == "33") { //企业代码||法人证书
            if (dataValue.length >0 && dataValue.length < 20) {
                $(data).removeClass('errClass');
                $(data).next().text("");
                // errobj.css('display','none');
                return dataValue;
            } else {
                $(data).addClass('errClass');
                $(data).next().text("请输入正确的证件号！");
                // errobj.css('display','block');
                return false;
            }
        } else if (type == "99") {
            //只要长度大于0，即可
            if (dataValue.length < 1 || dataValue.length >30) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的证件号！");
                return false;
            } else {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            }
        }
    } else if (codeType == 1) {
        var reg = new RegExp(/^1([3|4|5|6|7|8|9])[0-9]{9}$/);
        if (dataValue.length == 0 || !reg.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的手机号！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 2) {
        var reg = new RegExp(/^[0-9]{6}$/);
        if (dataValue.length == 0 || !reg.test(dataValue)) {
            //验证码的class添加在其父节点上
            $(data).parent().addClass(errClass);
            $(data).next().text("请输入正确的手机验证码！");
            return false;
        } else {
            $(data).parent().removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 3) {
        if (dataValue.length == 15 || dataValue.length == 16 || dataValue.length == 18 || dataValue.length == 19
			|| dataValue.length == 20 || dataValue.length == 25 || dataValue.length == 26) {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        } else {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的保单号！");
            return false;
        }
    }else if(codeType == 3.1){
        if (dataValue.length < 15 || (dataValue.length > 20 && dataValue.length != 26)) {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的批单号！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 4) {
        //寿险报案号：案号15位，前三位为字母，后12为数字
        var regLife = new RegExp(/^[a-zA-Z]{3}[a-zA-Z0-9]{12}$/);
        //健康险报案号：赔案号15位，VSHH+生成赔案号日期+随机顺序，例V：VSHH15102916712
        var regHealthy = new RegExp(/^VSHH[0-9]{11}$/);
        //产险-车险报案号：报案号18位，字母C开头，8-10为【VEH】，如：C310100VEH13437148
        var regCar = new RegExp(/^C[0-9]{6}VEH[a-zA-Z0-9]{8}$/);
        //产险非车报案号：共18位，首位为D、共14位，首位为C、共17位，首位为E
        var regNoCar = new RegExp(/^(D[a-zA-Z0-9]{17}|C[a-zA-Z0-9]{13}|E[a-zA-Z0-9]{16})$/);
        var lengthTest = new RegExp(/^([a-zA-Z0-9]{15}|[a-zA-Z0-9]{16})$/);
        if (regLife.test(dataValue) || regHealthy.test(dataValue) || regCar.test(dataValue) || regNoCar.test(dataValue) || lengthTest.test(dataValue)) {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        } else {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的赔案号/报案号！");
            return false;
        }
    } else if (codeType == 5) {
        //var regEmail = new RegExp(/^\w([-\w.+]){2,29}@([A-Za-z0-9][-A-Za-z0-9]+\.)+([A-Za-z0-9]){2,14}$/);
        var regEmail = new RegExp(/^([a-zA-Z0-9]+[\-|_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/);
        if (!regEmail.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的电子邮箱地址！");
            return false;
        } else {
            if (dataValue.length > 30) {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的电子邮箱地址！");
                return false;
            } else {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            }
        }
    } else if (codeType == 6) {
        var regName = new RegExp(/^(([\u4E00-\u9FA5.]){2,25}|([A-Za-z]){1}([A-Za-z\u00B7\s]){0,48}([A-Za-z]){1})$/);

        var regName1 = new RegExp(/^(([\u4E00-\u9FA5])+([\u00B7]){1}([\u4E00-\u9FA5])+)$/);
        var regName2 = new RegExp(/^(([\u4E00-\u9FA5]){1}([\u4E00-\u9FA5\u00B7]){0,48}([\u4E00-\u9FA5]){1})$/);
        if (!regName.test(dataValue)) {
            if (regName1.test(dataValue) && regName2.test(dataValue)) {
                $(data).removeClass(errClass);
                $(data).next().text("");
                return dataValue;
            } else {
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的姓名！");
                return false;
            }
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 7) {
        var regName = new RegExp(/^[\u4e00-\u9fa5]{1}[A-Z]{1}[A-Z0-9]{5}$/);
        if (!regName.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的车牌号！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 8) {
        if (dataValue.length < 1) {
            $(data).addClass(errClass);
            $(data).next().text("请输入内容！");
            return false;
        } else if (dataValue.length > 1000) {
            $(data).addClass(errClass);
            $(data).next().text("超过1000个字符！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 'selfComplaints') {
        if (dataValue.length < 1) {
            $(data).addClass(errClass);
            $(data).next().text("请输入内容！");
            return false;
        } else if (dataValue.length > 500) {
            $(data).addClass(errClass);
            $(data).next().text("超过1000个字符！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    }
    else if (codeType == 9) {
        var regName = new RegExp(/^0\d{2,3}-\d{7,8}$/);
        if (!regName.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的联系电话！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 10) {
        var regName = new RegExp(/^[0-9]{6}$/);
        if (!regName.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的邮编号码！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 11) {
        if (dataValue.length > 50 || dataValue.length < 8) {
            $(data).addClass(errClass);
            $(data).next().text("联系地址不能少于8个字或超过50个字！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 12) {
        if (dataValue.length >= 13 && dataValue.length <= 19) {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        } else {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的银行卡号！");
            return false;
        }
    } else if (codeType == 13) {
        var regName = new RegExp(/^[A-Z0-9]{17}$/);
        if (!regName.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("请输入正确的车架号！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 14) {
        var regName = new RegExp(/^[A-Z0-9]{16}$/);
        if (dataValue == "" || dataValue == null) {
            $(data).addClass(errClass);
            $(data).next().text("账号为空，请您输入账号！");
            return false;
        } else if (!regName.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("卡号输入有误,卡号必须为16位,请您重新输入");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 15) {
        var regName = new RegExp(/^[A-Z0-9]{8}$/);
        if (dataValue == "" || dataValue == null) {
            $(data).addClass(errClass);
            $(data).next().text("密码为空，请您输入密码！");
            return false;
        } else if (!regName.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("密码输入有误,密码必须为8位,请您重新输入！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 16) {
        var regName = new RegExp(/^[0-9a-zA-Z@\_.!$#]{6,16}$/);
        if (!regName.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("您输入的密码不符合规则，请重新输入！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    } else if (codeType == 17) {
        var reg = new RegExp(/^[a-zA-Z0-9]{4}$/);
        if (dataValue.length == 0 || !reg.test(dataValue)) {
            $(data).parent().addClass(errClass);
            $(data).next().text("请输入正确的验证码！");
            return false;
        } else {
            $(data).parent().removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    }else if(codeType == 18){
        var reg = /^((19[2-9]\d{1})|(20((0[0-9])|(1[0-8]))))\-((0?[1-9])|(1[0-2]))\-((0?[1-9])|([1-2][0-9])|30|31)$/;
        if(reg.test(dataValue)) {
            var date = new Date(dataValue);
            var month = dataValue.substring(dataValue.indexOf("-")+1,dataValue.lastIndexOf("-"));
            if(date && (date.getMonth()+1 == parseInt(month))){
                return dataValue;
            }else{
                $(data).addClass(errClass);
                $(data).next().text("请输入正确的出生日期！");
                return false;
            }
        }
        $(data).addClass(errClass);
        $(data).next().text("请输入正确的出生日期！");
        return false;
    }else if(codeType == 19) {
        var regName = new RegExp(/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@\_.!$#])[0-9A-Za-z@\_.!$#]{8,16}$/);
        if (!regName.test(dataValue)) {
            $(data).addClass(errClass);
            $(data).next().text("您输入的密码不符合规则，请重新输入！");
            return false;
        } else {
            $(data).removeClass(errClass);
            $(data).next().text("");
            return dataValue;
        }
    }
};

$(function() {
    //公用tab页切换js
    if ($('.tabs-container').html()) {
        var tabs = new Swiper('.tabs-container', {
            onlyExternal: true,
            speed: 500,
            useCSS3Transforms : false
        })
        $(".tabs a").on('touchstart mousedown', function(e) {
            e.preventDefault();
            $(".tabs .active").removeClass('active');
            $(this).addClass('active');
            tabs.swipeTo($(this).index());
        })
        $(".tabs a").click(function(e) {
            e.preventDefault()
        });
    }
    // listMenu();
    var count = 1;
    var index = 0;
    $('.submenu' + count).find('.submenu_title').addClass('current').children('input').val(-1);
    $('.submenu' + count).find('.submenu_cont').addClass('current');
    $('.submenu' + count).find('.submenu_cont').children().eq(index).addClass('current');

    $(".submenu_title").hover(function() {
        $(this).addClass('current');
    }, function() {
        var i = $(this).children('input').val();
        if (i == 1) {
            $(this).removeClass('current');
        }
    })
    $(".submenu_title").click(function() {
        var i = $(this).children('input').val();
        i = -i;
        $(".submenu_title").removeClass('current').children('input').val(1);
        $(this).addClass('current').children('input').val(i);
        $('.submenu_cont:visible').slideUp();
        $(this).next(".submenu_cont").stop().slideToggle();
    });
    $('.submenu_cont li').hover(function() {
        $(this).css('color', '#06569D');
    }, function() {
        if (!$(this).hasClass('current')) {
            $(this).css('color', '#575757');
        }
    });
    $('.submenu_cont li').click(function() {
        $('.submenu_cont li').removeClass('current').css('color', '#575757');
        $(this).addClass('current').css('color', '#06569D');
    })
    //右侧悬浮智能客服
    if ($(".customer_service").html()) {
        var customer = $(".customer_service");
        //var thisBottom = (height() - customer.height()) / 2 + "px";
        //customer.css("bottom", thisBottom);
        $('.floatMenu').unbind('click');
        $(".floatMenu").click(function() {
            var btn = $(".floatMenu");
            var menu = $(".customer_service_con");

            menu.toggle(function() {
                menu.animate({
                    display: "none"
                }, 1000);
                if (btn.text() == "关 闭") {
                    btn.text("打 开");
                } else {
                    btn.text("关 闭");
                }
            });
        });
    }

    //头部右侧二维码hover后显示
    $(".loginbarCode").hover(function(){
        $(".loginbarCodeShow").toggle();
    });

});